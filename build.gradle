plugins {
    id 'java'
    id 'jacoco'
    id 'application'
    id 'org.openjfx.javafxplugin' version '0.0.14' // Updated plugin version
}

group = 'com.inventorymanagement'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.openjfx:javafx-controls:21.0.4'
    implementation 'org.openjfx:javafx-fxml:21.0.4'
    implementation 'org.openjfx:javafx-graphics:21.0.4'

    testImplementation platform('org.junit:junit-bom:5.10.0')
    testImplementation 'org.junit.jupiter:junit-jupiter'
    testImplementation 'org.mockito:mockito-core:5.5.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.5.0'
    implementation 'com.h2database:h2:2.1.214'
}

application {
    mainClass = 'main.Store'
}

javafx {
    version = '21.0.4'
    modules = [ 'javafx.controls', 'javafx.fxml', 'javafx.graphics' ]
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
}

test {
    useJUnitPlatform()
    maxHeapSize = "1g"
    jvmArgs = ["-Xmx1g", "-Xms512m", "-XX:MaxMetaspaceSize=256m"]
    testLogging {
        events "passed", "skipped", "failed", "standardOut", "standardError"
    }

    finalizedBy jacocoTestReport
}

tasks.withType(Test).configureEach {
    testLogging {
        exceptionFormat "full"
        events "skipped", "passed", "failed"
        showStandardStreams true
    }
}

jar {
    manifest {
        attributes(
                'Main-Class': 'main.Store'
        )
    }
}

jacoco {
    toolVersion = "0.8.10"
}

jacocoTestReport {
    dependsOn test
    reports {
        xml.required = false
        csv.required = false
        html.outputLocation = layout.buildDirectory.dir('jacocoHtml')
    }
}
